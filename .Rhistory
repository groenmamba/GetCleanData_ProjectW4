find.package("devtool")
find.package("devtools")
install.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
Sys.getenv('MYSQL_HOME')
install.packages('RMySQL',type='source')
install.packages("RMySQL", type = "source")
library(RMySQL)
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(1)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(1)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeVector(1)
cahcemean(1)
cachemean(1)
makeVector(c(1,2,3)
)
makeVector(c(1,2,3))
cahcemean(c(1,2,3))
cachemean(c(1,2,3))
cachemean(1
)
x <- matrix(rnorm(200), 20, 10)
x
y <- matrix(rnorm(200), 20, 10)
inverse(x,y)
solve(x,y)
y <- matrix(1:25, 5, 5)
y
solve(y0)
solve(y)
x <- matrix(1:25, 5, 5)
x
solve(x,y)
t(x)
?glm
solve(y)
solve(z)
solve(x)
m <- matrix(c(0, 2, 1, 0), nrow = 2, ncol = 2, byrow = TRUE)
solve(m)
m
m <- matrix(c(2, 4, 6, 8), nrow = 2, ncol = 2, byrow = TRUE)
m
solve(m)
makeVector(1)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
m
solve(m)
makeCacheMatrix(m)
cacheSolve(m)
makeCacheMatrix(m)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
m
cacheSolve(m)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
m
makeCacheMatrix(m)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
x$setmean(m)
m$setmean(m)
z <- matrix(c(4, 6, 8,10), nrow = 2, ncol = 2, byrow = TRUE)
z
solve(z)
makeCacheMatrix(m)
x$setinv(m)
z$setinv(m)
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
z$setinv(m)
x$setinv
source('C:/git/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(m)
cacheSolve()
cacheSolve(m)
cacheSolve(z)
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(m))
cacheSolve(makeCacheMatrix(z))
cacheSolve(makeCacheMatrix(z))
source('C:/git/ProgrammingAssignment2/cachematrix.R')
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
cacheSolve(makeCacheMatrix(mat1))
cacheSolve(makeCacheMatrix(mat1))
cacheSolve(makeCacheMatrix(z))
cacheSolve(makeCacheMatrix(z))
source('C:/git/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(z))
data(mtcars)
str(mtcars)
summary(mtcas   )
summary(mtcars)
head(mtcars)
library(data.table)
library(dplyr)
library(dtplyr)
library(plyr)
features <- read.table("./data/UCI HAR Dataset/features.txt")
setwd("C:/git/GetCleanData_ProjectW4")
features <- read.table("./data/UCI HAR Dataset/features.txt")
summary(features)
features
act_lbl <- read.table("./data/UCI HAR Dataset/activity_labels.txt")
View(act_lbl)
view(features)
View(features)
train_ds <- read.table("./data/UCI HAR Dataset/train/X_train.txt")
acttrain <- read.table("./data/UCI HAR Dataset/train/y_train.txt")
subtrain <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
View(subtrain)
test_ds <- read.table("./data/UCI HAR Dataset/test/X_test.txt")
acttest <- read.table("./data/UCI HAR Dataset/test/y_test.txt")
subtest <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
View(train_ds)
summary(train_ds)
View(acttrain)
datamerged <- rbind(train_ds,test_ds)
actmerged <- rbind(acttrain, acttest)
submerged <- rbind(subtrain,subtest)
View(datamerged)
colnames(datamerged) <- features$V2
View(datamerged)
names(actmerged)
names(actmerged)[1] <- "activity"
names(actmerged)
names(submerged)
names(submerged)[1] <- "subject"
names(submerged)
ds_single <- cbind(actmerged, submerged, datamerged)
View(ds_single)
grep("mean:std", ds_single(names), value = TRUE)
grep("mean", ds_single(names), value = TRUE)
grep("mean", names(ds_single), value = TRUE)
grep("mean:std", names(ds_single), value = TRUE)
grep("[mean:std]", names(ds_single), value = TRUE)
grep("mean|std", names(ds_single), value = TRUE)
grep("mean()|std()", names(ds_single), value = TRUE)
grep("mean()|std()", names(ds_single), value = FALSE)
grep("mean()|std()|!meanFreq", names(ds_single), value = TRUE)
grep("!meanFreq", names(ds_single), value = TRUE)
grep(!"meanFreq", names(ds_single), value = TRUE)
grep("mean()|std()", names(ds_single), value = TRUE)
d <- ds_single[,grep("mean()|std()", names(ds_single), value = TRUE)]
!grep("meanfreq()|std()", names(d), value = TRUE)
![grep("meanfreq()|std()", names(d), value = TRUE)]
grep("meanfreq", names(d), value = TRUE)
grep("meanFreq", names(d), value = TRUE)
!grep("meanFreq", names(d), value = TRUE)
grep("!meanFreq", names(d), value = TRUE)
d[,!grep("meanFreq", names(d), value = TRUE)]
d[!grep("meanFreq", names(d), value = TRUE)]
d[,-grep("meanFreq", names(d), value = TRUE)]
d[,grep("meanFreq", names(d), value = TRUE)]
summary(d[,grep("meanFreq", names(d), value = TRUE)])
summary(d[,-grep("meanFreq", names(d), value = TRUE)])
summary(d)
grep("meanFreq", names(d), value = TRUE)
grep("mean(Freq))", names(d), value = TRUE)
names(d)
summary(d[,-grep("meanFreq", names(d), value = TRUE)])
summary(d[,grep("meanFreq", names(d), value = TRUE)])
summary(d[,-grep("meanFreq", names(d), value = TRUE)])
grep("meanFreq", names(d), value = TRUE)]
grep("meanFreq", names(d), value = TRUE)
grep(-v "meanFreq", names(d), value = TRUE)
grep -v "meanFreq", names(d), value = TRUE
grep "meanFreq", names(d), value = TRUE
grep("meanFreq", names(d), value = TRUE, invert = FALSE)
grep("meanFreq", names(d), value = TRUE, invert = TRUE)
grep("activity|subject|mean()|std()", names(ds_single), value = TRUE)
summary(ds_single[,grep("activity|subject|mean()|std()", names(ds_single), value = TRUE)])
names(ds_single[,grep("activity|subject|mean()|std()", names(ds_single), value = TRUE)])
ms_extract <- ds_single[,grep("activity|subject|mean()|std()", names(ds_single), value = TRUE)]
names(ms_extract[,grep("meanFreq", names(d), value = TRUE, invert = TRUE)])
names(ms_extract[,grep("meanFreq", names(ms_extract), value = TRUE, invert = TRUE)])
ms_extract <- ms_extract[,grep("meanFreq", names(ms_extract), value = TRUE, invert = TRUE)]
str(ms_extract)
str(ms_extract[3])
names(ms_extract)
summary(ms_extract$fBodyBodyGyroJerkMag-mean())
str(act_lbl)
names(act_lbl)[1] <- "activity"
names(act_lbl)[2] <- "activity_name"
str(act_lbl)
act_named <- left_join(ms_extract, act_lbl, by="activity")
View(act_named)
act_named <- right_join(act_lbl, ms_extract, by="activity")
View(act_named)
act_named <- right_join(act_lbl, ms_extract, by="activity")
View(act_named)
gsub("(\)","",names(act_named))
gsub("(|)","",names(act_named))
names(act_named) <- gsub("(|)","",names(act_named))
names(act_named)
names(act_named) <- gsub("(","",names(act_named))
names(act_named) <- gsub("\(","",names(act_named))
names(act_named) <- gsub([:punct:],"",names(act_named))
names(act_named) <- gsub("[:punct:]"","",names(act_named))
names(act_named) <- gsub(""[:punct:]"","",names(act_named))
names(act_named) <- gsub("[[:punct:]]","",names(act_named))
names(act_named)
act_named <- right_join(act_lbl, ms_extract, by="activity")
names(act_lbl)
names(act_named)
names(act_named) <- gsub("mean","Mean",names(act_named))
names(act_named)
names(act_named) <- gsub("std","StandardDeviation",names(act_named))
names(act_named)
names(act_named) <- gsub("^f|^t","",names(act_named))
names(act_named)
act_named <- right_join(act_lbl, ms_extract, by="activity")
View(act_named)
names(act_named)
names(act_named) <- gsub("^f","Frequency",names(act_named))
names(act_named)
names(act_named) <- gsub("^t","Time",names(act_named))
names(act_named)
names(act_named) <- gsub("mean","Mean",names(act_named))
names(act_named) <- gsub("std","StandardDeviation",names(act_named))
names(act_named) <- gsub("[[:punct:]]","",names(act_named))
names(act_named)
names(act_named) <- str_trim(names(act_named))
datamerged <- rbind(train_ds,test_ds)
actmerged <- rbind(acttrain, acttest)
submerged <- rbind(subtrain,subtest)
colnames(datamerged) <- features$V2
names(actmerged)[1] <- "Activity"
names(submerged)[1] <- "Subject"
ds_single <- cbind(actmerged, submerged, datamerged)
ms_extract <- ds_single[,grep("Activity|Subject|mean()|std()", names(ds_single), value = TRUE)]
ms_extract <- ms_extract[,grep("meanFreq", names(ms_extract), value = TRUE, invert = TRUE)]
View(ms_extract)
names(act_lbl)[1] <- "Activity"
names(act_lbl)[2] <- "Activity_name"
names(act_lbl)
act_named <- right_join(act_lbl, ms_extract, by="Activity")
names(act_named)
names(act_named) <- gsub("^f","Frequency",names(act_named))
names(act_named) <- gsub("^t","Time",names(act_named))
names(act_named) <- gsub("mean","Mean",names(act_named))
names(act_named) <- gsub("std","StandardDeviation",names(act_named))
names(act_named) <- gsub("[[:punct:]]","",names(act_named))
names(act_named)
tidy_ds <<- ddply(data_act, .(Activity, Subject), numcolwise(mean,na.rm = TRUE))
tidy_ds <<- ddply(act_named, .(Activity, Subject), numcolwise(mean,na.rm = TRUE))
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
tidy_ds <<- ddply(act_named, .(Activity_Name, Subject), numcolwise(mean,na.rm = TRUE))
names(act_named)
names(act_lbl)[2] <- "ActivityName"
names(act_named)[2] <- "ActivityName"
tidy_ds <<- ddply(act_named, .(ActivityName, Subject), numcolwise(mean,na.rm = TRUE))
tidy_ds <<- ddply(act_named, .(ActivityName, Subject), numcolwise(mean,na.rm = TRUE))
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
tidy_ds <<- ddply(act_named, .(Activity, ActivityName, Subject), numcolwise(mean,na.rm = TRUE))
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
mytest <- act_named[,act_named[2-69]]
mytest <- act_named[,act_named[,2-69]]
names(act_lbl)[1] <- "Activity"
names(act_lbl)[2] <- "ActivityName"
act_named <- right_join(act_lbl, ms_extract, by="Activity")
names(act_named) <- gsub("^f","Frequency",names(act_named))
names(act_named) <- gsub("^t","Time",names(act_named))
names(act_named) <- gsub("mean","Mean",names(act_named))
names(act_named) <- gsub("std","StandardDeviation",names(act_named))
names(act_named) <- gsub("[[:punct:]]","",names(act_named))
tidy_ds <<- ddply(act_named, .(Activity, ActivityName, Subject), numcolwise(mean,na.rm = TRUE))
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
act_named <- right_join(act_lbl, ms_extract, by="Activity")
names(act_named) <- gsub("^f","Frequency",names(act_named))
names(act_named) <- gsub("^t","Time",names(act_named))
names(act_named) <- gsub("std","StandardDeviation",names(act_named))
names(act_named) <- gsub("mean","Mean",names(act_named))
names(act_named) <- gsub("[[:punct:]]","",names(act_named), except("-"))
names(act_named)
names(act_named) <- gsub("([-])|[[:punct:]]","",names(act_named))
names(act_named)
act_named <- right_join(act_lbl, ms_extract, by="Activity")
names(act_named)
gsub("(|)","",names(act_named))
gsub("(","",names(act_named))
gsub("[(]","",names(act_named))
gsub("[(]|[)]","",names(act_named))
names(act_named) <- gsub("[(]|[)]","",names(act_named))
names(act_named) <- gsub("std","StandardDeviation",names(act_named))
names(act_named) <- gsub("mean","Mean",names(act_named))
names(act_named) <- gsub("^t","Time",names(act_named))
names(act_named) <- gsub("^f","Frequency",names(act_named))
names(act_named)
tidy_ds <<- ddply(act_named, .(Activity, ActivityName, Subject), numcolwise(mean,na.rm = TRUE))
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
names(act_named) <- gsub("Acc","Accelerometer",names(act_named))
names(act_named) <- gsub("Gyro","Gyroscope",names(act_named))
names(act_named) <- gsub("Mag","Magnitude",names(act_named))
names(act_named)
names(act_named) <- gsub("BodyBody","Body",names(act_named))
names(act_named)
tidy_ds <<- ddply(act_named, .(Activity, ActivityName, Subject), numcolwise(mean,na.rm = TRUE))
write.table(tidy_ds, "./tidy_data.txt", row.name=FALSE)
act_lbl
names(tidy_ds)
str(tidy_ds)
library(knitr)
kable(act_lbl)
str(tidy_ds)
library(knitr)
kable(act_lbl)
library(knitr)
kable(act_lbl)
act_lbl
act_lbl
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
act_lbl
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
act_lbl
str(tidy_ds)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
act_lbl
library(knitr)
str(act_lbl)
act_lbl
# Chunk 1: Activities
print act_lbl
# Chunk 1: Activities
act_lbl
str(tidy_ds)
str(tidy_ds$FrequencyBodyGyroscopeJerkMagnitude-StandardDeviation)
